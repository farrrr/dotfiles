[user]
    name = Far Tseng
    email = farrrr@gmail.com
    signingkey = ADFC5C75ED2320AAC2D400799725A67A8B5287C9
[include]
    path = .gitconfig.modern
[include]
    path = .gitconfig.pager
[init]
    defaultBranch = main
[checkout]
    workers = 0
[commit]
    gpgsign = true
[mergetool]
    keepbackup = false
    prompt = false
    trustExitCode = true
[difftool]
    prompt = true
[diff]
    algorithm = histogram
    # Git diff will use (i)ndex, (w)ork tree, (c)ommit and (o)bject instead of a/b/c/d as prefixes for patches
    mnemonicPrefix = true
    tool = vscode
    colorMoved = default
    submodule = log
[merge]
    tool = kdiff3
    # Include summaries of merged commits in newly created merge commit messages
    log = true
[status]
    submodulesummary = true
[alias]
    lol = log --graph --all
    lo = log --graph
    ci = commit -v
    br = branch
    st = status
    mt = mergetool
    dt = difftool
    re = restore
    sw = switch
    d = diff --color-words=.
    # fetch only current branch and main
    f = "!if [[ $(git rev-parse --abbrev-ref HEAD) == 'main' ]]; then git fetch --no-tags origin main; else git fetch --no-tags origin $(git rev-parse --abbrev-ref HEAD) main:main; fi"
    # pull only current branch, fetch nothing else
    p = "!git pull --no-tags origin $(git rev-parse --abbrev-ref HEAD)"
    pc = "!git push && gh cws"
    puff = push --force-if-includes --force-with-lease
    # logp and reflogp have been adjustd so that they are compatible with git-delta
    logp = log -p --format='commit %C(yellow)%h %C(magenta)%<(15,trunc)%an %C(cyan)%cd %C(auto)%d%Creset %s'
    reflogp = reflog -p --format='commit %C(auto)%h%d %gd: %gs (%s)'
    unstage = reset HEAD --
    last = log -1 HEAD
    worktree-skipped = !git ls-files -v | grep "^S"
    unchange-assumed = !git ls-files -v | grep "^[[:lower:]]"
    cleanup = "!git branch --merged | grep  -v '^\\*\\|master\\|main\\|develop\\|hotfix\\|temp\\|[0-9]task' | xargs -n 1 git branch -d"
    cleanup-all = "!f(){\
        git branch | grep -v 'master\\|main\\|develop\\|hotfix\\|temp\\|[0-9]task' | grep -v ^* | sh -c 'while read br; \
        do git log -1 $br; \
        git branch -D $br >> ~/temp/cleaned-branches.txt; \
        done' ;\
       }; f"
    stash-rename = "!_() { if [ -z \"$1\" ] || [ -z \"$2\" ]; then echo \"git rename-stash 0 NewName\" && echo \"\" && git stash list && exit 1; else stash=\"stash@{$1}\"; rev=$(git rev-parse \"${stash}\"); git stash drop \"${stash}\" || exit 1; git stash store -m \"$2\" \"$rev\" || exit 1; git stash list; fi }; _"
[fetch]
    prune = true
[log]
    decorate = short
    abbrevcommit = true
    date = relative
[rerere]
    enabled = true
[pull]
    rebase = true
[push]
    autoSetupRemote = true
[rebase]
    autoStash = true
[format]
    pretty = "%C(yellow)%h %C(magenta)%<(15,trunc)%an %C(cyan)%cd %C(auto)%d%Creset %s"
[difftool "vscode"]
    cmd = code --wait --diff $LOCAL $REMOTE
[mergetool "vscode"]
    cmd = code --wait --merge $REMOTE $LOCAL $BASE $MERGED
# diff for binary Apple property list files
[diff "plist"]
    textconv = plutil -convert xml1 -o -
    # this will redirect all http based remote URLs to the git protocol instead, fixing auth problems at github. But causing https://stackoverflow.com/questions/58596233/failed-to-fetch-https-github-com-rust-lang-crates-io-index, but when I comment these lines out I get https://stackoverflow.com/questions/10909221/why-is-github-asking-for-username-password-when-following-the-instructions-on-sc
[url "git@github.com:"]
	insteadOf = http://github.com/
	insteadOf = https://github.com/
[lfs]
	locksverify = false
[maintenance]
repo = /Users/klas.mellbourn/code/firstvet/monorepo/.bare
[filter "lfs"]
    process = git-lfs filter-process
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
